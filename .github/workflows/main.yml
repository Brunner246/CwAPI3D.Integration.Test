name: CI

on:
  schedule:
    - cron: '30 12 * * 3'
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        compiler: ['msvc', 'clang']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Setup MSVC
        if: matrix.compiler == 'msvc'
        uses: ilammy/msvc-dev-cmd@v1.13.0

      - name: Setup Clang
        if: matrix.compiler == 'clang'
        uses: egor-tensin/setup-clang@v1.4
        with:
          platform: x64
          version: latest

      - name: Install Ninja
        run: |
          choco install ninja

      - name: Configure
        shell: bash
        run: |
          if [[ "${{ matrix.compiler }}" == "msvc" ]]; then
            cmake -S . -B build -G "Visual Studio 17 2022" -DCMAKE_BUILD_TYPE=Release
          elif [[ "${{ matrix.compiler }}" == "clang" ]]; then
            cmake -S . -B build -G "Ninja" -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DCMAKE_BUILD_TYPE=Release
          else
            cmake -S . -B build -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release
          fi

      - name: Build
        run: cmake --build build

      - name: Upload MSVC artifacts
        if: matrix.compiler == 'msvc'
        uses: actions/upload-artifact@v4
        with:
          name: msvc-compiled-dlls-${{ github.run_id }}
          path: |
            **/*.dll
      
      - name: Upload Clang artifacts
        if: matrix.compiler == 'clang'
        uses: actions/upload-artifact@v4
        with:
          name: clang-compiled-dlls-${{ github.run_id }}
          path: |
            **/*.dll
